name: Java CI with Gradle

# 동작 조건 설정 : main 브랜치에 push 또는 pull request가 발생할 경우 동작한다.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 push 하는 과정
  build-docker-image:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # 1. Java 17 설정
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. SpringBoot 애플리케이션 Build
    - name: Build with Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with:
        arguments: clean bootJar
    
    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-docker-first .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-docker-first

    - name: Build with Gradle Wrapper
      run: ./gradlew build
