name: CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: iop04226/my-docker-first
  CONTAINER_NAME: test_docker
  PORT: 8080

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Build & Push Docker Image
        run: |
          docker build -t $DOCKER_IMAGE:$GITHUB_SHA .
          docker push $DOCKER_IMAGE:$GITHUB_SHA

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Docker 이미지 최신화
            docker pull $DOCKER_IMAGE:$GITHUB_SHA
            
            # 기존 컨테이너 정리
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            
            # 신규 컨테이너 실행
            docker run -d \
              --name $CONTAINER_NAME \
              -p $PORT:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              $DOCKER_IMAGE:$GITHUB_SHA
            
            # 컨테이너 상태 확인
            docker ps | grep $CONTAINER_NAME
            # 중단된 컨테이너 정리
            docker system prune -f
